document.addEventListener("DOMContentLoaded",()=>{let e=0,t=[],n=["$","USD"];const d=document.querySelector(".currency-table"),c=document.querySelector(".invest-form"),r=document.querySelector(".invest-input");function o(c){document.querySelectorAll(".fiat").forEach(e=>e.textContent=` (${n[1]})`),t=c;const r=["rank","name","market_cap_usd","price_usd","investment"];let o=document.createElement("tbody");c.forEach(t=>{let d=document.createElement("tr");r.forEach(c=>{let r=document.createElement("td"),o=t[c];r.textContent="investment"===c?2*e:"market_cap_usd"===c||"price_usd"===c?function(e){let t=parseFloat(e);return t=t%1!=0&&t>1?(t=`${n[0]}${t.toFixed(2)}`).replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,"):t<1?`${n[0]}${t}`:(t=`${n[0]}${parseInt(t)}`).replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,")}(o):o,d.appendChild(r)}),o.appendChild(d)}),d.appendChild(o)}c.addEventListener("submit",n=>(function(n){if(n.preventDefault(),""!==r.value){for(e=r.value;d.childNodes.length>1;)d.removeChild(d.lastChild);o(t)}})(n)),function(e){return fetch(e).then(e=>e.json())}("https://api.coinmarketcap.com/v1/ticker/?limit=20").then(e=>o(e))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiaW52ZXN0QW1vdW50IiwiYWxsQ3VycmVuY2llcyIsImZpYXQiLCJjdXJyZW5jeVRhYmxlIiwicXVlcnlTZWxlY3RvciIsImZvcm0iLCJpbnB1dCIsImJ1aWxkVGFibGUiLCJjdXJyZW5jaWVzIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJpdGVtIiwidGV4dENvbnRlbnQiLCJ0YWJsZUNvbHVtbnMiLCJ0Ym9keSIsImNyZWF0ZUVsZW1lbnQiLCJjdXIiLCJ0ciIsImNvbCIsInRkIiwiY2VsbERhdGEiLCJ2YWx1ZSIsIm5ld051bSIsInBhcnNlRmxvYXQiLCJ0b0ZpeGVkIiwicmVwbGFjZSIsInBhcnNlSW50IiwiZm9ybWF0TnVtIiwiYXBwZW5kQ2hpbGQiLCJlIiwicHJldmVudERlZmF1bHQiLCJjaGlsZE5vZGVzIiwibGVuZ3RoIiwicmVtb3ZlQ2hpbGQiLCJsYXN0Q2hpbGQiLCJzdWJtaXRGb3JtIiwidXJsIiwiZmV0Y2giLCJ0aGVuIiwicmVzIiwianNvbiIsImdldERhdGEiXSwibWFwcGluZ3MiOiJBQUFBQSxTQUFBQyxpQkFBQSxtQkFBQSxLQUdBLElBQUFDLEVBQUEsRUFDQUMsS0FDQUMsR0FBQSxJQUFBLE9BSUEsTUFBQUMsRUFBQUwsU0FBQU0sY0FBQSxtQkFDQUMsRUFBQVAsU0FBQU0sY0FBQSxnQkFDQUUsRUFBQVIsU0FBQU0sY0FBQSxpQkE0QkEsU0FBQUcsRUFBQUMsR0FFQVYsU0FBQVcsaUJBQUEsU0FBQUMsUUFBQUMsR0FBQUEsRUFBQUMsaUJBQUFWLEVBQUEsT0FHQUQsRUFBQU8sRUFDQSxNQUFBSyxHQUFBLE9BQUEsT0FBQSxpQkFBQSxZQUFBLGNBQ0EsSUFBQUMsRUFBQWhCLFNBQUFpQixjQUFBLFNBQ0FQLEVBQUFFLFFBQUFNLElBRUEsSUFBQUMsRUFBQW5CLFNBQUFpQixjQUFBLE1BQ0FGLEVBQUFILFFBQUFRLElBQ0EsSUFBQUMsRUFBQXJCLFNBQUFpQixjQUFBLE1BQ0FLLEVBQUFKLEVBQUFFLEdBSUFDLEVBQUFQLFlBQUEsZUFBQU0sRUE2Q0EsRUE1Q0FsQixFQUNBLG1CQUFBa0IsR0FBQSxjQUFBQSxFQWdCQSxTQUFBRyxHQUNBLElBQUFDLEVBQUFDLFdBQUFGLEdBR0EsT0FLQUMsRUFMQUEsRUFBQSxHQUFBLEdBQUFBLEVBQUEsR0FHQUEsS0FBQXBCLEVBQUEsS0FBQW9CLEVBQUFFLFFBQUEsTUFFQUMsUUFBQSwyQkFBQSxPQUNBSCxFQUFBLEtBQ0FwQixFQUFBLEtBQUFvQixLQUdBQSxLQUFBcEIsRUFBQSxLQUFBd0IsU0FBQUosTUFDQUcsUUFBQSwyQkFBQSxPQS9CQUUsQ0FBQVAsR0FDQUEsRUFFQUgsRUFBQVcsWUFBQVQsS0FFQUwsRUFBQWMsWUFBQVgsS0FHQWQsRUFBQXlCLFlBQUFkLEdBbkRBVCxFQUFBTixpQkFBQSxTQUFBOEIsSUEyRkEsU0FBQUEsR0FFQSxHQURBQSxFQUFBQyxpQkFDQSxLQUFBeEIsRUFBQWUsTUFBQSxDQUlBLElBSEFyQixFQUFBTSxFQUFBZSxNQUdBbEIsRUFBQTRCLFdBQUFDLE9BQUEsR0FDQTdCLEVBQUE4QixZQUFBOUIsRUFBQStCLFdBRUEzQixFQUFBTixLQXBHQWtDLENBQUFOLElBZUEsU0FBQU8sR0FDQSxPQUFBQyxNQUFBRCxHQUNBRSxLQUFBQyxHQUFBQSxFQUFBQyxRQVpBQyxDQUFBLHFEQUNBSCxLQUFBQyxHQUFBaEMsRUFBQWdDIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoICdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xyXG5cclxuICAgIC8vID09PT09IEdMT0JBTFMgPT09PT0gLy9cclxuICAgIGxldCBpbnZlc3RBbW91bnQgICAgPSAwO1xyXG4gICAgbGV0IGFsbEN1cnJlbmNpZXMgICA9IFtdO1xyXG4gICAgbGV0IGZpYXQgPSBbJyQnLCAnVVNEJ107XHJcblxyXG5cclxuICAgIC8vID09PT09IFB1dCBhbGwgRE9NIHRhcmdldHRpbmcgaGVyZSA9PT09PSAvL1xyXG4gICAgY29uc3QgY3VycmVuY3lUYWJsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoICcuY3VycmVuY3ktdGFibGUnICk7XHJcbiAgICBjb25zdCBmb3JtICAgICAgICAgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvciggJy5pbnZlc3QtZm9ybScgKTtcclxuICAgIGNvbnN0IGlucHV0ICAgICAgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCAnLmludmVzdC1pbnB1dCcgKTtcclxuXHJcblxyXG4gICAgLy8gPT09PT0gRE9NIExpc3RlbmVycyA9PT09PSAvLyBcclxuICAgIGZvcm0uYWRkRXZlbnRMaXN0ZW5lciggJ3N1Ym1pdCcsICggZSApID0+IHN1Ym1pdEZvcm0oIGUgKSApXHJcblxyXG5cclxuXHJcblxyXG4gICAgZ2V0RGF0YSggJ2h0dHBzOi8vYXBpLmNvaW5tYXJrZXRjYXAuY29tL3YxL3RpY2tlci8/bGltaXQ9MjAnIClcclxuICAgICAgICAudGhlbiggcmVzID0+IGJ1aWxkVGFibGUoIHJlcyApIClcclxuXHJcblxyXG4gICAgXHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHt1cmx9IFN0cmluZyAgdXJsIHN0cmluZ1xyXG4gICAgICogQHJldHVybnMgeyBwcm9taXNlIH0gXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIGdldERhdGEoIHVybCApIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goIHVybCApXHJcbiAgICAgICAgICAgICAgICAudGhlbiggcmVzID0+IHJlcy5qc29uKCkgKVxyXG4gICAgfTsgXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7Y3VycmVuY2llc30gQXJyYXkgYXJyYXkgb2YgY3VycmVuY2llcyBkYXRhICBcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gYnVpbGRUYWJsZSggY3VycmVuY2llcyApIHtcclxuICAgICAgICAvLyBBZGQgZmlhdCB0byB0aGVhZFxyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5maWF0JykuZm9yRWFjaCgoaXRlbSkgPT4gaXRlbS50ZXh0Q29udGVudCA9IGAgKCR7ZmlhdFsxXX0pYCk7XHJcbiAgICAgICAgLy8gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmZpYXQnKVswXS50ZXh0Q29udGVudCA9IGAgKCR7ZmlhdFsxXX0pYDtcclxuICAgICAgICAvLyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZmlhdCcpWzFdLnRleHRDb250ZW50ID0gYCAoJHtmaWF0WzFdfSlgO1xyXG4gICAgICAgIGFsbEN1cnJlbmNpZXMgPSBjdXJyZW5jaWVzXHJcbiAgICAgICAgY29uc3QgdGFibGVDb2x1bW5zID0gWyAncmFuaycsICduYW1lJywgJ21hcmtldF9jYXBfdXNkJywgJ3ByaWNlX3VzZCcsICdpbnZlc3RtZW50JyBdXHJcbiAgICAgICAgbGV0IHRib2R5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggJ3Rib2R5JyApO1xyXG4gICAgICAgIGN1cnJlbmNpZXMuZm9yRWFjaCggY3VyID0+IHtcclxuXHJcbiAgICAgICAgICAgIGxldCB0ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICd0cicpO1xyXG4gICAgICAgICAgICB0YWJsZUNvbHVtbnMuZm9yRWFjaCggY29sID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCB0ZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICd0ZCcgKTsgICBcclxuICAgICAgICAgICAgICAgIGxldCBjZWxsRGF0YSA9IGN1cltjb2xdXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC8vIGlzIHRoZSBjb2x1bW4gZm9yIGludmVzdG1lbnQ/IFxyXG4gICAgICAgICAgICAgICAgLy8gaWYgeWVzLCBjYWxjdWxhdGUgaW52ZXN0bWVudCBmb3IgY29sdW1uaWYgbm90LCBpcyB0aGUgY29sdW1uIGZvciBtYXJrZXQgY2FwIG9yIHByaWNlP1xyXG4gICAgICAgICAgICAgICAgdGQudGV4dENvbnRlbnQgPSBjb2wgPT09ICdpbnZlc3RtZW50JyBcclxuICAgICAgICAgICAgICAgICAgICA/IGNhbGN1bGF0ZUludmVzdG1lbnQoIGludmVzdEFtb3VudCApXHJcbiAgICAgICAgICAgICAgICAgICAgOiAoIGNvbCA9PT0gJ21hcmtldF9jYXBfdXNkJyB8fCBjb2wgPT09ICdwcmljZV91c2QnICkgPyBmb3JtYXROdW0oIGNlbGxEYXRhIClcclxuICAgICAgICAgICAgICAgICAgICA6IGNlbGxEYXRhXHJcblxyXG4gICAgICAgICAgICAgICAgdHIuYXBwZW5kQ2hpbGQoIHRkICk7XHJcbiAgICAgICAgICAgIH0gKVxyXG4gICAgICAgICAgICB0Ym9keS5hcHBlbmRDaGlsZCggdHIgKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9IClcclxuICAgICAgICBjdXJyZW5jeVRhYmxlLmFwcGVuZENoaWxkKCB0Ym9keSApXHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge3ZhbHVlfSBOdW1iZXIgZnJvbSBjZWxsRGF0YVxyXG4gICAgICogQHJldHVybnMge051bWJlcn0gRm9ybWF0dGVkIHdpdGggY29tbWFzIGFuZCBmaWF0IHN5bWJvbC5cclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gZm9ybWF0TnVtKCB2YWx1ZSApIHtcclxuICAgICAgICBsZXQgbmV3TnVtID0gcGFyc2VGbG9hdCggdmFsdWUgKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBDaGVjayBmb3IgZmxvYXRcclxuICAgICAgICBpZiAobmV3TnVtICUgMSAhPT0gMCAmJiBuZXdOdW0gPiAxKSB7XHJcbiAgICAgICAgICAgIC8vIEFkZCBmaWF0IGN1cnJlbmN5IHN5bWJvbCAkXHJcbiAgICAgICAgICAgIC8vIElmIHByaWNlIGlzIG92ZXIgMSwgbGltaXQgZGVjaW1hbHMgdG8gdHdvIHBsYWNlc1xyXG4gICAgICAgICAgICBuZXdOdW0gPSBgJHtmaWF0WzBdfSR7bmV3TnVtLnRvRml4ZWQoMil9YDtcclxuICAgICAgICAgICAgLy8gQWRkIGNvbW1hIGFmdGVyIGV2ZXJ5IHRocmVlIG51bWJlcnNcclxuICAgICAgICAgICAgcmV0dXJuIG5ld051bSA9IG5ld051bS5yZXBsYWNlKC8oXFxkKSg/PShcXGRcXGRcXGQpKyg/IVxcZCkpL2csIFwiJDEsXCIpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAobmV3TnVtIDwgMSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3TnVtID0gYCR7ZmlhdFswXX0ke25ld051bX1gO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIElmIG1hcmtldCBjYXAsIG5vIGRlY2ltYWwgcGxhY2VcclxuICAgICAgICAgICAgbmV3TnVtID0gYCR7ZmlhdFswXX0ke3BhcnNlSW50KG5ld051bSl9YDtcclxuICAgICAgICAgICAgcmV0dXJuIG5ld051bSA9IG5ld051bS5yZXBsYWNlKC8oXFxkKSg/PShcXGRcXGRcXGQpKyg/IVxcZCkpL2csIFwiJDEsXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH0gXHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge3ZhbHVlfSBOdW1iZXIgXHJcbiAgICAgKiBAcmV0dXJucyB7TnVtYmVyfSBcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gY2FsY3VsYXRlSW52ZXN0bWVudCggdmFsdWUgKSB7XHJcbiAgICAgICAgLy8gPT09PT0gTmVlZCB0byBmaWd1cmUgb3V0IHRoZSBjYWxjdWxhdGlvbnMgaGVyZSA9PT09PSAvL1xyXG4gICAgICAgIHJldHVybiB2YWx1ZSAqIDI7IFxyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgZnVuY3Rpb24gc3VibWl0Rm9ybSggZSApIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgaWYoIGlucHV0LnZhbHVlICE9PSAnJyApIHtcclxuICAgICAgICAgICAgaW52ZXN0QW1vdW50ID0gaW5wdXQudmFsdWU7XHJcblxyXG4gICAgICAgICAgICAvLyA9PT09PSBSZW1vdmUgdGFibGUgYm9keSBhbmQgcmUtcmVuZGVyID09PT09IC8vXHJcbiAgICAgICAgICAgIHdoaWxlIChjdXJyZW5jeVRhYmxlLmNoaWxkTm9kZXMubGVuZ3RoID4gMSkge1xyXG4gICAgICAgICAgICAgICAgY3VycmVuY3lUYWJsZS5yZW1vdmVDaGlsZChjdXJyZW5jeVRhYmxlLmxhc3RDaGlsZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnVpbGRUYWJsZSggYWxsQ3VycmVuY2llcyApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSApIl19
